// If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
// Find the sum of all the multiples of 3 or 5 below 1000.
function problem1() {
  const answerP = document.querySelector("#problem1Answer");
  let sum = 0;
  for(let i = 0; i < 1000; i++) {
    if ((i%3===0) || (i%5===0)){
      sum += i;
    }
  }
  answerP.innerHTML = "Answer: " + sum;
}

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
function problem2() {
  console.log(findFibUpTo(4000000));
}

function findFibUpTo(num) {
  let prev1 = 1;
  let prev2 = 1;
  let latest= 2;
  let total = 0;
  while(latest<num) {
    latest = prev1 + prev2;
    if(latest%2==0) {
      total += latest;
    }
    prev2 = prev1;
    prev1 = latest;
  }
  return total;
}

// The prime factors of 13195 are 5, 7, 13 and 29.
// What is the largest prime factor of the number 600851475143 ?
function problem3(num) {
  let i = 2
  while (num > 1) {
    console.log(num);
    if (num % i == 0) {
      num /= i;
      i -=1
    } 
    i +=1;
  }
  return i;
}

// A palindromic number reads the same both ways. The largest palindrome made from the product of two 2-digit numbers is 9009 = 91 × 99.
// Find the largest palindrome made from the product of two 3-digit numbers.
function problem4(){
  let largest = 0;
  let x = 999;
  let y = 999;
  for(x; x>0; x--) {
    for (y; y>0; y--) {
      mult = x*y;
      if (checkPali(mult)) {
        if (mult > largest) {
          largest = mult;
        }
        break;
      }
    }
    y = 999;
  }
  return largest;
}

function checkPali(num) {
  let tempNum = Array.from(num.toString()).map(Number);
  for(let i = 0; i < tempNum.length/2; i++) {
    if (tempNum[i] !== tempNum[tempNum.length-i-1]) return false;
  }
  return true;
}

// 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
// What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
function problem5(startNum, endNum) {
  let smallestDiv = (endNum * (endNum-1)) / gcd(endNum, endNum-1);
  for(endNum; endNum > startNum; endNum--) {
    smallestDiv = (smallestDiv * (endNum-1)) / gcd(smallestDiv, endNum-1);
  }
  console.log(smallestDiv);
}

function gcd(num1, num2) {
  while(num1 !== num2){
    if (num1 > num2) {
      num1 -= num2
    } else {
      num2 -= num1;
    }
  }
  return num1;
}

problem5(1, 20);



// The sum of the squares of the first ten natural numbers is,
// 12 + 22 + ... + 102 = 385
// The square of the sum of the first ten natural numbers is,
// (1 + 2 + ... + 10)2 = 552 = 3025
// Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 − 385 = 2640.
// Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.

